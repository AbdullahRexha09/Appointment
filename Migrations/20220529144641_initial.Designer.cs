// <auto-generated />
using System;
using Appointment.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Appointment.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220529144641_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Appointment.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BreakId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WorkingScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BreakId");

                    b.HasIndex("WorkingScheduleId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec450a2d-1675-4199-b742-fee1becbbdfb"),
                            BreakId = new Guid("7a44de32-c577-40e8-b638-8059d4d821d5"),
                            Email = "abdullahrexha09@gmail.com",
                            Name = "Abdullah",
                            WorkingScheduleId = new Guid("7a44de32-c577-40e8-b638-8059d4d821d4")
                        });
                });

            modelBuilder.Entity("Appointment.Models.TimeSlot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("End")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TimeSlot");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a44de32-c577-40e8-b638-8059d4d821d4"),
                            End = "06:00:00 PM",
                            Name = "Working Schedule",
                            Start = "09:00:00 AM"
                        },
                        new
                        {
                            Id = new Guid("7a44de32-c577-40e8-b638-8059d4d821d5"),
                            End = "01:00:00 PM",
                            Name = "Break Schedule",
                            Start = "12:00:00 PM"
                        });
                });

            modelBuilder.Entity("Appointment.Models.Employee", b =>
                {
                    b.HasOne("Appointment.Models.TimeSlot", "Break")
                        .WithMany()
                        .HasForeignKey("BreakId");

                    b.HasOne("Appointment.Models.TimeSlot", "WorkingSchedule")
                        .WithMany()
                        .HasForeignKey("WorkingScheduleId");

                    b.Navigation("Break");

                    b.Navigation("WorkingSchedule");
                });
#pragma warning restore 612, 618
        }
    }
}
